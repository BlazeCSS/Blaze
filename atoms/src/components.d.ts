/**
 * This is an autogenerated file created by the Stencil build process.
 * It contains typing information for all components that exist in this project
 * and imports for stencil collections that might be configured in your stencil.config.js file
 */


import {
  AddressHeading as BlazeAddressHeading
} from './components/address/blaze-address-heading';

declare global {
  interface HTMLBlazeAddressHeadingElement extends BlazeAddressHeading, HTMLElement {
  }
  var HTMLBlazeAddressHeadingElement: {
    prototype: HTMLBlazeAddressHeadingElement;
    new (): HTMLBlazeAddressHeadingElement;
  };
  interface HTMLElementTagNameMap {
    "blaze-address-heading": HTMLBlazeAddressHeadingElement;
  }
  interface ElementTagNameMap {
    "blaze-address-heading": HTMLBlazeAddressHeadingElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      "blaze-address-heading": JSXElements.BlazeAddressHeadingAttributes;
    }
  }
  namespace JSXElements {
    export interface BlazeAddressHeadingAttributes extends HTMLAttributes {
      
    }
  }
}


import {
  Address as BlazeAddress
} from './components/address/blaze-address';

declare global {
  interface HTMLBlazeAddressElement extends BlazeAddress, HTMLElement {
  }
  var HTMLBlazeAddressElement: {
    prototype: HTMLBlazeAddressElement;
    new (): HTMLBlazeAddressElement;
  };
  interface HTMLElementTagNameMap {
    "blaze-address": HTMLBlazeAddressElement;
  }
  interface ElementTagNameMap {
    "blaze-address": HTMLBlazeAddressElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      "blaze-address": JSXElements.BlazeAddressAttributes;
    }
  }
  namespace JSXElements {
    export interface BlazeAddressAttributes extends HTMLAttributes {
      
    }
  }
}


import {
  Alert as BlazeAlert
} from './components/alert/blaze-alert';

declare global {
  interface HTMLBlazeAlertElement extends BlazeAlert, HTMLElement {
  }
  var HTMLBlazeAlertElement: {
    prototype: HTMLBlazeAlertElement;
    new (): HTMLBlazeAlertElement;
  };
  interface HTMLElementTagNameMap {
    "blaze-alert": HTMLBlazeAlertElement;
  }
  interface ElementTagNameMap {
    "blaze-alert": HTMLBlazeAlertElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      "blaze-alert": JSXElements.BlazeAlertAttributes;
    }
  }
  namespace JSXElements {
    export interface BlazeAlertAttributes extends HTMLAttributes {
      
        type?: string
    }
  }
}


import {
  Avatar as BlazeAvatar
} from './components/avatar/blaze-avatar';

declare global {
  interface HTMLBlazeAvatarElement extends BlazeAvatar, HTMLElement {
  }
  var HTMLBlazeAvatarElement: {
    prototype: HTMLBlazeAvatarElement;
    new (): HTMLBlazeAvatarElement;
  };
  interface HTMLElementTagNameMap {
    "blaze-avatar": HTMLBlazeAvatarElement;
  }
  interface ElementTagNameMap {
    "blaze-avatar": HTMLBlazeAvatarElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      "blaze-avatar": JSXElements.BlazeAvatarAttributes;
    }
  }
  namespace JSXElements {
    export interface BlazeAvatarAttributes extends HTMLAttributes {
      
        size?: string,
        src?: string,
        text?: string
    }
  }
}

